name: Android CI

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - name: bundle setup
        run: gem install bundler
      - name: bundle install
        run: bundle install
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Write google-services.json
        env:
          GOOGLE_SERVICE_JSON_BASE64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
        run: echo $GOOGLE_SERVICE_JSON_BASE64 | base64 -d > ./app/google-services.json
      - name: Write debug.keystore
        env:
          DEBUG_KEYSTORE_BASE64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
        run:
          # cat debug.keystore | base64
          if [ -n "$DEBUG_KEYSTORE_BASE64" ]; then
            echo $DEBUG_KEYSTORE_BASE64 | base64 -d > ./debug.keystore;
          fi;
      - name: Android Lint
        run: ./gradlew lint assembleDebug
      - name: Build with Gradle
        run:
          ./gradlew assembleDebug ktlintCheck
      - name: exec danger
        run: bundle exec danger
      - name: Firebae CLI Install2
        run: npm install -g firebase-tools
      - name: Firebase CLI deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_TESTER_GROUPS: ${{ secrets.FIREBASE_TESTER_GROUPS }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk --app $FIREBASE_APP_ID --release-notes "PR #$PR_NUMBER. $PR_TITLE" --groups "$FIREBASE_TESTER_GROUPS" --token $FIREBASE_TOKEN