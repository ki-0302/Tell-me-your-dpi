name: Android CI

on:
  pull_request:
    branches: [ master ]

jobs:
  ktlint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-jdk-gradle-keystore
        with:
          debug-keystore-base64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
      - name: Run ktlint
        run: ./gradlew ktlintCheck
      - name: Archive reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: ./reports
          retention-days: 3
  android-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-jdk-gradle-keystore
        with:
          debug-keystore-base64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          google_service_json_base64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
      - name: Run Android lint
        run: ./gradlew lintDebug
      - name: Archive reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: ./reports
          retention-days: 3
  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-jdk-gradle-keystore
        with:
          debug-keystore-base64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          google_service_json_base64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
      - name: Run Unit Test
        run: ./gradlew testDebugUnitTest
      - name: Copy unit test reports to reports dir
        run: ./gradlew copyUnitTestReports
        if: always()
      - name: Archive reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: ./reports
          retention-days: 3
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: 'reports/test-results/*.xml'
  merge-lint-report:
    if: cancelled() != true
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # 通常は並列実行する。needsをつけると指定したjobが終わるまで待機する
    needs: [ktlint,android-lint]
    steps:
      - uses: actions/checkout@v2
      # 共通のgradleセットアップ用の関数を呼び出す
      - uses: ./.github/actions/setup-jdk-gradle-keystore
        with:
          debug-keystore-base64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          google_service_json_base64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
      - name: Download reports
        uses: actions/download-artifact@v2
        with:
          name: reports
          path: ./reports
      - name: Run merge reports
        run: ./gradlew mergeReports
      - name: Archive reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: ./reports
          retention-days: 3
  danger:
    if: cancelled() != true
    runs-on: ubuntu-latest
    needs: [merge-lint-report]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          # gitの先頭Commit以外を取得するのに必要
          fetch-depth: 0
      - uses: ./.github/actions/setup-jdk-gradle-keystore
        with:
          debug-keystore-base64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          google_service_json_base64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true
      - name: Setup bundler
        run: |
          gem install danger
          gem install danger-checkstyle_format
          gem install danger-android_lint
          gem install danger-junit
      - name: Download reports
        uses: actions/download-artifact@v2
        with:
          name: reports
          path: ./reports
      - name: ls
        run: ls ./reports
      - name: Run Danger
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
        run: |
          danger --verbose
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-jdk-gradle-keystore
        with:
          debug-keystore-base64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          google_service_json_base64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
      - name: build apk
        run: ./gradlew assembleDebug
      - name: Firebae CLI Install
        run: npm install -g firebase-tools
      - name: Firebase CLI deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_TESTER_GROUPS: ${{ secrets.FIREBASE_TESTER_GROUPS }}
          PR_NUMBER: "#${{ github.event.pull_request.number }}."
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk --app $FIREBASE_APP_ID --release-notes "PR $PR_NUMBER $PR_TITLE" --groups "$FIREBASE_TESTER_GROUPS" --token $FIREBASE_TOKEN
